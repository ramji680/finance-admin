version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fynito_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: fynito_admin
      MYSQL_USER: fynito_user
      MYSQL_PASSWORD: fynito_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fynito_network

  # Backend API
  backend:
    build: .
    container_name: fynito_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: fynito_admin
      DB_USER: fynito_user
      DB_PASSWORD: fynito_password
      JWT_SECRET: your_super_secret_jwt_key_here
      RAZORPAY_KEY_ID: your_razorpay_key_id
      RAZORPAY_KEY_SECRET: your_razorpay_key_secret
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - fynito_network

  # Frontend (Development)
  frontend:
    build: ./frontend
    container_name: fynito_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - fynito_network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: fynito_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fynito_network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: fynito_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - fynito_network

volumes:
  mysql_data:
  redis_data:

networks:
  fynito_network:
    driver: bridge
